@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --inpector-card-bg: white;
  --inpector-sidebar-item-bg: #1d232a;
  --inpector-text-color: #ffffff;
  --inspector-border-color: rgb(236, 233, 233);
  --inspector-gap: 8px;
  --disabled-button-bg: rgb(213, 213, 213);
  --error-t: white;
  --error: #ff5861;
  --success: #00a96e;
  --success-t: white;
  --neutral: rgb(35, 42, 51);
  --neutral-text: white;
  --inspector-list-bg: #f2f2f2;
  --inspector-active-list-bg: #dcdddf;
}

@media (prefers-color-scheme: dark) {
  :root {
    --inpector-card-bg: #1f2937;
    --inpector-sidebar-item-bg: #1d232a;
    --inpector-text-color: #ffffff;
    --inspector-border-color: rgb(82, 82, 82);
    --inspector-gap: 8px;
    --disabled-button-bg: rgb(213, 213, 213);
    --error: #ff5861;
    --error-t: white;
    --success: #00a96e;
    --success-t: white;
    --neutral: #18181b;
    --neutral-text: white;
    --inspector-list-bg: #334155;
    --inspector-active-list-bg: #1f2937;
  }
}

.capture-container {
  color-scheme: light dark;
  dialog:-internal-dialog-in-top-layer::backdrop {
    backdrop-filter: blur(1px);
    -webkit-backdrop-filter: blur(1px);
    background-color: rgba(255, 255, 255, 0.3);
  }
  @media (prefers-color-scheme: dark) {
    * {
      color: white;
    }
    input,
    textarea {
      &:focus,
      &:focus-visible,
      &:focus-within {
        outline-color: var(--inspector-border-color) !important;
      }
    }
    dialog:-internal-dialog-in-top-layer::backdrop {
      background-color: rgba(0, 0, 0, 0.6);
    }
  }

  .card {
    background-color: var(--inpector-card-bg);
    & * {
      border-color: var(--inspector-border-color);
    }
  }
  .btn {
    display: inline-flex;
    height: 3rem;
    min-height: 3rem;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, 0.5rem);
    border-color: transparent;
    border-color: var(--inspector-border-color);
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: 0.875rem;
    line-height: 1em;
    gap: 0.5rem;
    font-weight: 600;
    text-decoration-line: none;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    border-width: var(--border-btn, 1px);
    transition-property: color, background-color, border-color, opacity, box-shadow, transform;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
    background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1;
  }
  button,
  [role='button'] {
    cursor: pointer;
  }
  button,
  input:where([type='button']),
  input:where([type='reset']),
  input:where([type='submit']) {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
  }
  .btn-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-size: 0.875rem;
  }
  .btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--disabled-button-bg, oklch(var(--n) / var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    --tw-text-opacity: 0.2;
    opacity: 0.5;
    pointer-events: none;
  }
  .btn-neutral:not(.btn-outline) {
    background-color: var(--neutral);
    color: var(--neutral-text);
  }
  .btn-neutral.btn-outline {
    border-color: var(--neutral);
  }
  .btn-success:not(.btn-outline) {
    background-color: var(--success) !important;
    color: var(--success-t) !important;
  }
  .btn-success.btn-outline {
    border-color: var(--success) !important;
  }
  .btn-error.btn-outline {
    border-color: var(--error) !important;
  }
  .btn-error:not(.btn-outline) {
    background-color: var(--error) !important;
    color: var(--error-t);
  }
  .btn-error.btn-outline {
    border-color: var(--error);
  }

  .card-actions {
    display: flex;
    gap: var(--inspector-gap);
  }
  .modal-open,
  .modal:target,
  .modal-toggle:checked + .modal,
  .modal[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
  }
  .modal {
    display: flex;
    align-items: center;
    pointer-events: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    justify-items: center;
    padding: 0;
    opacity: 0;
    overscroll-behavior: contain;
    z-index: 999;
    background-color: transparent;
    color: inherit;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity, visibility;
    overflow-y: hidden;
  }
  .modal-open .modal-box,
  .modal-toggle:checked + .modal .modal-box,
  .modal:target .modal-box,
  .modal[open] .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  .modal-box {
    max-height: calc(100vh - 5em);
    grid-column-start: 1;
    grid-row-start: 1;
    width: 91.666667%;
    max-width: 32rem;
    --tw-scale-x: 0.9;
    --tw-scale-y: 0.9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--inpector-card-bg);
    padding: 1.5rem;
    transition-property:
      color,
      background-color,
      border-color,
      text-decoration-color,
      fill,
      stroke,
      opacity,
      box-shadow,
      transform,
      filter,
      -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
      backdrop-filter;
    transition-property:
      color,
      background-color,
      border-color,
      text-decoration-color,
      fill,
      stroke,
      opacity,
      box-shadow,
      transform,
      filter,
      backdrop-filter,
      -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    box-shadow: #00000040 0 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .modal-action {
    display: flex;
    margin-top: 1.5rem;
    gap: var(--inspector-gap);
    justify-content: flex-end;
  }
  .input {
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, 0.5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
  }
  .input-bordered {
    border-color: var(--inspector-border-color, oklch(var(--bc) / 0.2));
  }

  .input:has(> input[disabled]),
  .input-disabled,
  .input:disabled,
  .input[disabled] {
    cursor: not-allowed;
    border-color: var(--inspector-border-color, oklch(var(--bc) / 0.2));
    background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
    color: var(--fallback-bc, oklch(var(--bc) / 0.4));
    opacity: 0.7;
  }
  .textarea {
    min-height: 3rem;
    flex-shrink: 1;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-radius: var(--rounded-btn, 0.5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
  }
  .textarea-bordered {
    border-color: var(--inspector-border-color, oklch(var(--bc) / 0.2));
  }
  .menu {
    background-color: var(--inspector-list-bg);
    border-radius: 8px;
    padding: 5px;
    @apply space-y-2 divide-y divide-[var(--inspector-border-color)];

    li {
      transition: background-color 0.3s;
      border-radius: 8px;
      padding: 5px 8px;
      display: flex;
      gap: 4px;
      align-items: center;
      justify-content: space-between;
      a {
        flex-grow: 1;
      }
      &:hover {
        background-color: var(--inspector-active-list-bg);
      }
    }
  }

  label {
    display: block;
  }

  *[data-collapsed='true'] {
    border-radius: 0.375rem;
  }
  .capture-sidebar-item:last-child {
    .step-arrow {
      display: none;
    }
  }
  .editableInput {
    width: 100%;
    border-color: var(--inspector-border-color);
    background-color: transparent;
    @apply rounded border;
    &:focus,
    &:focus-within,
    &:focus-visible {
      outline: 2px solid var(--inspector-border-color);
    }
  }
}
